// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  customer
}

model User {
  id              String            @id @default(uuid())
  name            String
  email           String            @unique
  password        String
  role            Role
  contactNo       String            @map("contact_no")
  address         String
  profileImg      String            @map("profile_img")
  ReviewAndRating ReviewAndRating[]
  Order           Order[]
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")

  @@map("users")
}

model Category {
  id        String   @id @default(uuid())
  title     String
  Book      Book[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("categories")
}

model Book {
  id              String            @id @default(uuid())
  title           String
  author          String
  price           Float
  genre           String
  publicationDate String            @map("publication_date")
  categoryId      String            @map("category_id")
  category        Category          @relation(fields: [categoryId], references: [id])
  ReviewAndRating ReviewAndRating[]
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")

  @@map("books")
}

model ReviewAndRating {
  id        String   @id @default(uuid())
  review    String
  rating    Int
  userId    String   @map("user_id")
  bookId    String   @map("book_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id])
  book Book @relation(fields: [bookId], references: [id])

  @@map("reviews_and_ratings")
}

model Order {
  id           String   @id @default(uuid())
  userId       String   @map("user_id")
  orderedBooks Json     @map("ordered_books")
  status       String   @default("pending")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  user         User     @relation(fields: [userId], references: [id])

  @@map("orders")
}
